{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Devlopment\\\\ReactJS\\\\15.2 NextJS Project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Devlopment/ReactJS/15.2 NextJS Project/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAUD;;KAXQN,a;;AAyDT,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <>\r\n        <MeetupDetail \r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            address={props.meetupData.address}\r\n            description={props.meetupData.description}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport async function getStaticPaths () {\r\n    // fetch data from an API\r\n    const client = await MongoClient.connect('mongodb+srv://dherya:qCDpAYzq5WJvNdeL@cluster0.keqbyhu.mongodb.net/?retryWrites=true&w=majority');\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close(); \r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: {meetupId: meetup._id.toString()}}))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps (context) {\r\n    const meetupId = context.params.meetupId;   \r\n\r\n    // fetch data from an API\r\n    const client = await MongoClient.connect('mongodb+srv://dherya:qCDpAYzq5WJvNdeL@cluster0.keqbyhu.mongodb.net/?retryWrites=true&w=majority');\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId)});\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description,\r\n                image: selectedMeetup.image,\r\n                id: selectedMeetup._id.toString()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}